{"version":3,"sources":["Components/Video/Video.component.jsx","Components/VideoList/VideoList.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Video","props","className","src","video","thumbnail","alt","channel_logo","title","metas","channel_name","varified","views","months","VideoList","videos","map","id","MyApp","state","searchField","fetch","then","response","json","users","setState","this","filteredvideos","filter","toLowerCase","includes","console","log","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,EAAQ,SAAAC,GAAK,OAElB,sBAAKC,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,SACQ,qBAAKC,IAAKF,EAAMG,MAAMC,UAAWC,IAAI,OAErC,sBAAKJ,UAAU,cAAf,UACI,qBAAKC,IAAKF,EAAMG,MAAMG,aAAcD,IAAI,KACxC,6BAAKL,EAAMG,MAAMI,WAErB,oBAAGN,UAAU,eAAb,UAA8BD,EAAMG,MAAMK,MAAMC,aAC/CT,EAAMG,MAAMK,MAAME,SACb,mBAAGT,UAAU,gBACb,MAGV,oBAAGA,UAAU,SAAb,UAAsB,sBAAMA,UAAU,YAAhB,SAA8BD,EAAMG,MAAMK,MAAMG,QAAtE,YAA6F,sBAAMV,UAAU,QAAhB,SAA0BD,EAAMG,MAAMK,MAAMI,SAAzI,qBCfHC,EAAY,SAAAb,GAAK,OAC1B,qBAAKC,UAAU,kBAAf,SACKD,EAAMc,OAAOC,KAAI,SAAAZ,GAAK,OACnB,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMa,UC+BfC,E,kDAhCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXJ,OAAQ,GACRK,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,4DACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACX,OAAOU,S,oBAGvC,WAAS,IAAD,SAEuBE,KAAKR,MAA3BJ,EAFD,EAECA,OAAOK,EAFR,EAEQA,YACRQ,EAAiBb,EAAOc,QAAO,SAAAzB,GACnC,OAAOA,EAAMI,MAAMsB,cAAcC,SAASX,EAAYU,kBAKxD,OAFEE,QAAQC,IAAIL,GAGZ,sBAAK1B,UAAU,MAAf,UACE,uBAAOgC,KAAK,SAASC,YAAY,SAASC,SAAW,SAAAC,GAAC,OAAI,EAAKX,SAAS,CAAEN,YAAaiB,EAAEC,OAAOC,WAChG,cAAC,EAAD,CAAWxB,OAAQa,W,GA5BPY,aCQLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cb4f6477.chunk.js","sourcesContent":["import React from 'react';\nimport { VideoCSS } from './Video.css';\n\nexport const Video = props => (\n\n        <div className=\"single-video-item\">\n            <div className=\"single-video-thumbnail\">\n                    <img src={props.video.thumbnail} alt=\"\" />\n                    </div>\n                    <div className=\"video-title\">\n                        <img src={props.video.channel_logo} alt=\"\" />\n                        <h3>{props.video.title}</h3>\n                    </div>\n                    <p className=\"channel-name\">{ props.video.metas.channel_name }\n                    {props.video.metas.varified\n                        ? <i className=\"fa fa-check\"></i>\n                        : \"\"\n                    }\n                    </p>\n                <p className=\"chdesc\"><span className=\"viewcount\">{ props.video.metas.views }</span> Views . <span className=\"agotm\">{ props.video.metas.months }</span> Months Ago</p>\n        </div>\n        \n        \n)\n \n","import React from 'react';\nimport {VideoListCSS} from './VideoList.css';\nimport {Video} from '../Video/Video.component';\n\nexport const VideoList = props => (\n    <div className=\"video-container\">\n        {props.videos.map(video => (\n            <Video key={video.id} video={video}/>\n        ))}\n    </div>\n)","import './App.css';\nimport { VideoList } from './Components/VideoList/VideoList.component';\nimport { Component } from 'react';\n\nclass MyApp extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      videos: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://mocki.io/v1/b6dbd5dd-2f75-4b48-8287-12a1fc16ebf7')\n    .then(response => response.json())\n    .then(users => this.setState({videos:users}))\n  }\n\n  render(){\n\n    const {videos,searchField} = this.state; \n    const filteredvideos = videos.filter(video => {\n      return video.title.toLowerCase().includes(searchField.toLowerCase())  \n    });\n\n      console.log(filteredvideos);\n\n    return(\n      <div className=\"App\">\n        <input type=\"search\" placeholder=\"Search\" onChange={ e => this.setState({ searchField: e.target.value }) }/>\n        <VideoList videos={filteredvideos} />\n      </div>\n    )\n  }\n}\n\nexport default MyApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}